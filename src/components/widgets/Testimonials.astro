---
import Headline from '~/components/ui/Headline.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Button from '~/components/ui/Button.astro';
import Image from '~/components/common/Image.astro';
import { Icon } from 'astro-icon/components';
import type { Testimonials as Props } from '~/types';

const {
  title = '',
  subtitle = '',
  tagline = '',
  testimonials = [],
  callToAction,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} classes={{
    title: 'text-[#01407a]',
    subtitle: 'text-gray-800 font-medium',
    tagline: 'text-[#C9A227]'
  }} />

  <div class="grid sm:grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-8 mt-12">
    {
      testimonials &&
        testimonials.map(({ title, testimonial, name, job, image, company, rating = 5 }) => (
          <div class="flex h-auto intersect-once motion-safe:md:intersect:animate-fade motion-safe:md:opacity-0 intersect-quarter">
            <div class="relative flex flex-col p-8 bg-white rounded-2xl shadow-2xl border border-gray-100 hover:shadow-3xl transition-all duration-300 group hover:scale-105">
              
              <!-- Quote Icon -->
              <div class="absolute -top-4 left-8">
                <div class="w-8 h-8 bg-gradient-to-r from-[#C9A227] to-[#D4B332] rounded-full flex items-center justify-center shadow-lg">
                  <Icon name="tabler:quote" class="w-4 h-4 text-white" />
                </div>
              </div>

              <!-- Rating Stars -->
              <div class="flex items-center mb-4 pt-2">
                {Array.from({ length: 5 }, (_, i) => (
                  <Icon 
                    name="tabler:star-filled" 
                    class={`w-5 h-5 ${i < rating ? 'text-[#C9A227]' : 'text-gray-300'}`} 
                  />
                ))}
              </div>

              {title && <h3 class="text-xl font-semibold text-[#01407a] mb-4">{title}</h3>}
              
              {testimonial && (
                <blockquote class="flex-auto mb-6">
                  <p class="text-gray-700 leading-relaxed italic text-lg">"{testimonial}"</p>
                </blockquote>
              )}

              <!-- Decorative line -->
              <div class="w-12 h-px bg-gradient-to-r from-[#C9A227] to-[#BF1E2E] mb-6"></div>

              <div class="flex items-center">
                {image && (
                  <div class="h-14 w-14 rounded-full border-2 border-[#C9A227] p-0.5 shadow-md">
                    {typeof image === 'string' ? (
                      <Fragment set:html={image} />
                    ) : (
                      <Image
                        class="h-full w-full rounded-full object-cover"
                        width={56}
                        height={56}
                        widths={[400, 768]}
                        layout="fixed"
                        {...image}
                      />
                    )}
                  </div>
                )}

                <div class="grow ml-4 rtl:ml-0 rtl:mr-4">
                  {name && <p class="text-lg font-bold text-[#01407a]">{name}</p>}
                  {job && <p class="text-sm text-[#C9A227] font-medium">{job}</p>}
                  {company && <p class="text-xs text-gray-600 mt-1">{company}</p>}
                </div>
              </div>

              <!-- Subtle background pattern -->
              <div class="absolute bottom-0 right-0 w-24 h-24 opacity-5">
                <Icon name="tabler:shield-check" class="w-full h-full text-[#C9A227]" />
              </div>
            </div>
          </div>
        ))
    }
  </div>
  {
    callToAction && (
      <div class="flex justify-center mx-auto w-fit mt-8 md:mt-12 font-medium">
        <Button {...callToAction} />
      </div>
    )
  }
</WidgetWrapper>
