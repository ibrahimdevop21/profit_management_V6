---
import { getLangFromUrl, useTranslations } from '~/utils/i18n';

interface Partner {
  name: string;
  logo: string;
  alt: string;
}

interface Props {
  title?: string;
  subtitle?: string;
  tagline?: string;
  partners?: Partner[];
  classes?: {
    container?: string;
    title?: string;
    subtitle?: string;
    tagline?: string;
  };
}

const url = new URL(Astro.request.url);
const currentLang = getLangFromUrl(url);
const t = useTranslations(currentLang);

const {
  title = t('partners.title'),
  subtitle = t('partners.subtitle'),
  tagline = t('partners.tagline'),
  partners = [
    {
      name: 'Biomed',
      logo: '/images/partners/biomed.png',
      alt: 'Biomed - Healthcare Solutions'
    },
    {
      name: 'Egy Holland',
      logo: '/images/partners/egyholland-removebg-preview.png',
      alt: 'Egy Holland - International Partnership'
    },
    {
      name: 'El Agamy',
      logo: '/images/partners/elagamy-removebg-preview.png',
      alt: 'El Agamy - Business Solutions'
    },
    {
      name: 'El Ahlyia',
      logo: '/images/partners/elahlyia-removebg-preview.png',
      alt: 'El Ahlyia - Financial Services'
    },
    {
      name: 'Misr',
      logo: '/images/partners/misr.png',
      alt: 'Misr - Egyptian Enterprise'
    },
    {
      name: 'Riva Pharma',
      logo: '/images/partners/riva_phrma.png',
      alt: 'Riva Pharma - Pharmaceutical Solutions'
    }
  ],
  classes = {}
} = Astro.props;
---

<section class={`py-16 md:py-20 bg-gray-50 ${classes.container || ''}`}>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    
    <!-- Section Header -->
    <div class="text-center mb-12 md:mb-16">
      {tagline && (
        <p class={`text-sm font-semibold uppercase tracking-wide text-gold mb-4 ${classes.tagline || ''}`}>
          {tagline}
        </p>
      )}
      
      {title && (
        <h2 class={`text-3xl md:text-4xl font-bold text-charcoal font-heading mb-4 ${classes.title || ''}`}>
          {title}
        </h2>
      )}
      
      {subtitle && (
        <p class={`text-lg text-gray-600 max-w-3xl mx-auto leading-relaxed ${classes.subtitle || ''}`}>
          {subtitle}
        </p>
      )}
    </div>

    <!-- Partners Grid -->
    <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-8 md:gap-12 items-center">
      {partners.map((partner, index) => (
        <div 
          class="flex items-center justify-center p-4 bg-white rounded-lg shadow-sm hover:shadow-md transition-all duration-300 group"
          style={`animation-delay: ${index * 0.1}s`}
        >
          <img
            src={partner.logo}
            alt={partner.alt}
            class="max-h-12 md:max-h-16 w-auto object-contain filter grayscale hover:grayscale-0 transition-all duration-300 group-hover:scale-105"
            loading="lazy"
          />
        </div>
      ))}
    </div>

    <!-- Trust Statement -->
    <div class="text-center mt-12 md:mt-16">
      <p class="text-gray-600 font-medium">
        {t('partners.trustStatement')}
      </p>
    </div>
  </div>
</section>

<style>
  /* Fade in animation for partner logos */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .grid > div {
    animation: fadeInUp 0.6s ease-out forwards;
    opacity: 0;
  }

  /* Hover effects */
  .group:hover {
    transform: translateY(-2px);
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .grid {
      gap: 1.5rem;
    }
    
    .grid > div {
      padding: 0.75rem;
    }
  }
</style>
